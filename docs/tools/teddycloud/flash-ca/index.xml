<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Flash replacement CA on Toniebox Hacking</title><link>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/flash-ca/</link><description>Recent content in Flash replacement CA on Toniebox Hacking</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/flash-ca/index.xml" rel="self" type="application/rss+xml"/><item><title>CC3200</title><link>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/flash-ca/cc3200/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/flash-ca/cc3200/</guid><description>CC3200 # It is recommended to flash the replacement CA to /cert/c2.der and use the hackiebox-ng bootloader with the altCA patch. This will allow you to switch between the original and your replacement certificate. If you have installed the HackieboxNG Bootloader and the Hackiebox CFW you may upload the certificate via the webinterface of the CFW.
cc3200tool -p COM3 write_file certs/server/ca.der /cert/c2.der Beware The blockCheckRemove.310, noCerts.305 and the noHide.308 patch breaks the content passthrough to Boxine.</description></item><item><title>CC3235</title><link>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/flash-ca/cc3235/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/flash-ca/cc3235/</guid><description>CC3235 # Replace the original CA within your flash dump with the replacement CA and reflash it to your box. I recommend flashrom for that
cc3200tool -if cc32xx-flash.bin -of cc32xx-flash.customca.bin -d cc32xx customca.der /cert/ca.der Please continue with DNS step for the CC3235</description></item><item><title>ESP32</title><link>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/flash-ca/esp32/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/flash-ca/esp32/</guid><description>ESP32 # Browser based # With teddyCloud you can also write a new image with your custom CA and a DNS/IP so the box connects to teddyCloud. If you have a Fritzbox you can set it to tc.fritz.box (see CC3200 how to configure the hostname on your Fritzbox), if not set it to the IP of teddyCloud.
Legacy # Replace the original CA within your flash dump with esptool.</description></item></channel></rss>