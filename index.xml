<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Toniebox Reverse Engineering on Toniebox Hacking</title><link>https://toniebox-reverse-engineering.github.io/</link><description>Recent content in Toniebox Reverse Engineering on Toniebox Hacking</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://toniebox-reverse-engineering.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Installation</title><link>https://toniebox-reverse-engineering.github.io/docs/custom-firmware/cc3200/hackieboxng-bl/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/custom-firmware/cc3200/hackieboxng-bl/install/</guid><description>HackieboxNG Installation # Backup # Please make a full file based + flash backup of your toniebox&amp;rsquo;s flash with cc3200tool. More details on the usage of the cc3200tool and the required hardware can be found here Python 3 is needed! You may use a different COM port or the right device on linux ex. /dev/ttyUSB0.
python cc.py -p COM3 read_all_files targetdir/ read_flash backup.bin Please check, if you dumped every important file.</description></item><item><title>Bootloader</title><link>https://toniebox-reverse-engineering.github.io/docs/custom-firmware/cc3200/hackieboxng-bl/bootloader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/custom-firmware/cc3200/hackieboxng-bl/bootloader/</guid><description>HackieboxNG SD bootloader # The HackieboxNG SD bootloader consists of two bootloaders (called stages). Both stages share the same codebase and are relocated to 0x20038000 before run.
Preloader (Stage 1) # The preloader runs a fixed file from the sd card (sd:/revvox/boot/ngbootloader.bin) without any checks. An update for shouldn&amp;rsquo;t be necesarry in the future. It should be installed as primary bootloader for HackieboxNG to flash:/sys/mcuimg.bin.
All error codes for the preloader are in blue.</description></item><item><title>Firmware patches</title><link>https://toniebox-reverse-engineering.github.io/docs/custom-firmware/cc3200/hackieboxng-bl/ofw-patches/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/custom-firmware/cc3200/hackieboxng-bl/ofw-patches/</guid><description>HackieboxNG original firmware patches # Preface # Every patch is written for one or more specific versions of the original firmware. Currently the latest version supported for all patches is EU_V3.1.0_BF2-0. An overview over all known firmware versions can be found in the toniebox wiki.
Offline / Privacy # It is recommended to keep the toniebox offline if you are using a patched firmware. Using the offline mode is recommended.</description></item><item><title>Audio file format</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/general/audio-file-format/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/general/audio-file-format/</guid><description>SD card structure # Every box contains a SD card which is used to store the tonies audio data.
downloaded audio files # The downloaded audio files for tonies are stored on the SD card in a directory for every tonie.
Directories are named by the last 4 bytes of the tonie ISO15693 UID in hex format, e.g. \DEADBEEF. Within that folder there is a file named by the first 4 bytes of the UID.</description></item><item><title>Battery &amp; Power supply</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/general/battery-power-supply/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/general/battery-power-supply/</guid><description>Battery # Voltage: 3.6V Chemistry: NiMH Cells: 3 Size: AA NTC (Thermistor) white cable # 22°C - 10kOhm 35°C - 6kOhm 5°C - 30kOhm MF58 10kOhm 3950K (Confirmed by Boxine) Plug # JST PH 2mm 3pin Cable Length for custom battery packs # Black: 17cm Red: 15cm White: 15cm ADC Voltage Map # Box ID User voltage in V ADC raw charging original battery notes B-Dev Blue SciLor 3.975 2701 0 1 B-Dev Blue SciLor 4.</description></item><item><title>Boot Process</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/cc3200/boot-process/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/cc3200/boot-process/</guid><description>Boot Process # Introduction # When the CC3200 is started the integrated bootloader is loading /sys/mcuimg.bin from flash to the memory address 0x20004000. The SRAM is located at 0x20000000 to 0x2003FFFF. If you want to implement a second stage bootloader you would usally implement a relocator that moves your bootloader to 0x2000000. If it bootloader smaller than 16kB (0x4000) you then may load your desired firmware from SD or Flash to 0x20004000 as the integrated bootloader would do.</description></item><item><title>CC3200</title><link>https://toniebox-reverse-engineering.github.io/docs/box-variants/cc3200/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/box-variants/cc3200/</guid><description>Test</description></item><item><title>CC3200</title><link>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/dns/cc3200/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/dns/cc3200/</guid><description>CC3200 with altUrl patch # With a CC3200 box it is recommened to use the altUrl patch. Set the DNS entries for prod.revvox and rtnl.revvox to the TeddyCloud servers ip-address. If you have a fritzbox you can use the altUrl tc.fritz.box patch. You&amp;rsquo;ll just have to set the name of your server in your fritzbox to tc (Heimnetz -&amp;gt; Netzwerk -&amp;gt; Netzwerkverbindungen -&amp;gt; bearbeiten ). You may also edit the patch yourself to set the ip-address directly.</description></item><item><title>CC3200</title><link>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/dump-certs/cc3200/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/dump-certs/cc3200/</guid><description>CC3200 # You can use the cc3200tool to dump your certificates over the Tag Connect debug port of the box. If you have installed the HackieboxNG Bootloader you should already have those files in your backup.
cc3200tool -p COM3 read_file /cert/ca.der cert/ca.der read_file /cert/private.der cert/private.der read_file /cert/client.der cert/client.der Please continue with flash CA step for the CC3200</description></item><item><title>CC3200</title><link>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/flash-ca/cc3200/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/flash-ca/cc3200/</guid><description>CC3200 # It is recommended to flash the replacement CA to /cert/c2.der and use the hackiebox-ng bootloader with the altCA patch. This will allow you to switch between the original and your replacement certificate. If you have installed the HackieboxNG Bootloader and the Hackiebox CFW you may upload the certificate via the webinterface of the CFW.
cc3200tool -p COM3 write_file certs/server/ca.der /cert/c2.der Beware The blockCheckRemove.310, noCerts.305 and the noHide.308 patch breaks the content passthrough to Boxine.</description></item><item><title>CC3235</title><link>https://toniebox-reverse-engineering.github.io/docs/box-variants/cc3235/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/box-variants/cc3235/</guid><description>Test</description></item><item><title>CC3235</title><link>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/dns/cc3235/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/dns/cc3235/</guid><description>CC3235 # Set the DNS entries for prod.de.tbs.toys and rtnl.bxcl.de to the TeddyCloud servers ip-address. Beware, this will cut off the connection of all tonieboxes within your network, which arn&amp;rsquo;t patched with your replacement CA! As an alternative you can set the gateway for the tonieboxes to the ip of teddyCloud. With OpenWRT it works this way:
uci set dhcp.teddycloud=&amp;#34;tag&amp;#34; uci set dhcp.teddycloud.dhcp_option=&amp;#34;3,1.2.3.4&amp;#34; # 1.2.3.4=teddycloud ip uci add dhcp host uci set dhcp.</description></item><item><title>CC3235</title><link>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/dump-certs/cc3235/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/dump-certs/cc3235/</guid><description>CC3235 # You&amp;rsquo;ll have to manually extract it from the flash of the box with a SOP8 clamp directly from the memory or by desoldering it. Reading in-circuit can be tricky, but is possible. I recommend flashrom as tool for that. It may be necessary to use a more recent version of it. You can use the cc3200tool to extract your certificates from the flash dump.
cc3200tool -if cc32xx-flash.bin -d cc32xx read_all_files extract/ Please continue with flash CA step for the CC3235</description></item><item><title>CC3235</title><link>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/flash-ca/cc3235/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/flash-ca/cc3235/</guid><description>CC3235 # Replace the original CA within your flash dump with the replacement CA and reflash it to your box. I recommend flashrom for that
cc3200tool -if cc32xx-flash.bin -of cc32xx-flash.customca.bin -d cc32xx customca.der /cert/ca.der Please continue with DNS step for the CC3235</description></item><item><title>Debug port</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/cc3200/debug-port/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/cc3200/debug-port/</guid><description>Debug Port # Position of debug port on Toniebox-PCB # The debug port runs on 3.3 V
Layout debug port # 10 9 8 7 6 1 2 3 4 5 Pin Function Comment 1 TX 55 2 RX 57 3 VCC 3.3V 4 RST 32 5 GND 6 ? 45 7 TCK 19 8 TMS 20 9 SOP2 21 (indirect SOP0 35) 10 ? U3 Tag-Connector for debug port # To connect to the debug port a Tag-Connector can be used.</description></item><item><title>ESP32</title><link>https://toniebox-reverse-engineering.github.io/docs/box-variants/esp32/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/box-variants/esp32/</guid><description>Test</description></item><item><title>ESP32</title><link>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/dns/esp32/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/dns/esp32/</guid><description>ESP32 # You can either set the IP/DNS within the image or you may do it like on the CC3235.</description></item><item><title>ESP32</title><link>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/dump-certs/esp32/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/dump-certs/esp32/</guid><description>ESP32 # You can extract the flash memory via the debug port of the box and the esptool. Keep your backup! Please use a recent version of esptool. (&amp;gt;v4.4) Please connect the jumper J100 (Boot) and reset the box to put it into the required mode. Connect your 3.3V UART to J103 (TxD, RxD, GND). If connected with the Boot jumper, the box just start in &amp;ldquo;DOWNLOAD (USB/UART0)&amp;rdquo; mode. (Check with a serial monitor).</description></item><item><title>ESP32</title><link>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/flash-ca/esp32/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/tools/teddycloud/flash-ca/esp32/</guid><description>ESP32 # Browser based # With teddyCloud you can also write a new image with your custom CA and a DNS/IP so the box connects to teddyCloud. If you have a Fritzbox you can set it to tc.fritz.box (see CC3200 how to configure the hostname on your Fritzbox), if not set it to the IP of teddyCloud.
Legacy # Replace the original CA within your flash dump with esptool.</description></item><item><title>Firmware layout</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/cc3200/firmware-layout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/cc3200/firmware-layout/</guid><description>Important Toniebox firmware files # File Description /cert/ca.der Contains the Certificate Authority to check the https connection for the api /cert/private.der Private key of the box, don&amp;rsquo;t share, it is used to identificate agains the cloud /cert/client.der Public key of the box, don&amp;rsquo;t share /sys/mcuimg.bin Original bootloader /sys/mcuimg1.bin First original firmware slot /sys/mcuimg2.bin Second original firmware slot /sys/mcuimg3.bin Third original firmware slot /sys/mcubootinfo.bin Decides which firmware slot to boot Analysing the Toniebox firmware image format # The Toniebox uses the image structure just like in the cc3200-sdk from ti.</description></item><item><title>Firmware list</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/cc3200/firmware-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/cc3200/firmware-list/</guid><description>List of known firmware versions # Normal firmwares # Version Branch Creation Date Year git short hash Comments hash PD_V3.1.0_BF4-0 master 27 May 10:33 2021 d8481fc ea9dee23fe4f9967cb0ca232a31734d059fd0c4591c95e53722188b86ed2dd44 EU_V3.1.0_BF2-0 3.1.0_BF2_EU 06 May 20:21 2021 2640c1f 36ef76a6937a128d3bf125d7f08c0c120387e44f7b0d346203a7171f828dafbe EU_V3.1.0_BF1-0 3.1.0_BF1_EU 30 Mar 23:49 2021 e73e1fb e871f228e93563981f7dc433b11b4a09f90b64b0879909b19f12bf2083ad8fc3 EU_V3.0.8-0 3.0.8_EU 14 Oct 17:32 2020 33d4f3a f2ee433e0630a5624324277d763ce3c7aea1630a9a07a4b9817f09550f25fe56 EU_V3.0.7-0 EU_V3.0.7_stable_branch 17 Jul 09:49 2020 ba7a7b5 14ae54febb0f08cc055e64a0ca29243fa5ce51b5d7f9ce2aab3a5671d276be3b PD_V3.0.6_BF6-0 3.0.6_PD_BF6 19 Jun 18:08 2020 6fee560 be2918f9ab17f813c7c6aef553c929ae89d48f4621f5db1843851af4aa8a8ddb PD_V3.0.6_BF1-0 PD_V3.0.6_stable_branch 27 Apr 14:27 2020 af9d2fb fd781d30e9cae3f5ea562e2752b491b59f1e18fa3694bfb148a59698ee08bef7 EU_V3.</description></item><item><title>Hardware</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/cc3200/hardware/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/cc3200/hardware/</guid><description>Pictures (r1) # Board # Detail pictures see iFixit Teardown
Parts # Processor TI CC3200 # Technical Information Cortex-M4 arm7e-m thumb
I suggest to get a CC3200 Launchpad for first contact.
Various useful pins (SOP2, TCK, TMS, GND, RST, GND, RX0, TX0) are available through the onboard debug pins.
Flash 4MB ISSI IS25LQ032B # Firmware is stored in a TI propiertery FatFS but can easily be read over the RX/TX lines of the mainboard when the CC3200 is in flash-mode.</description></item><item><title>Internal audio files</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/general/internal-audio-files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/general/internal-audio-files/</guid><description>Internal audio files # Overview # Folder Language 00000000 English (GB) 00000001 German 00000002 English (USA) 00000003 French Language specific files # English (GB) # German # Folder Language File Animal Short Long 00000001 DE 00000000 Jingle Startup sound 00000001 DE 00000001 Tada 00000001 DE 00000002 Tadum MhhMhhh 00000001 DE 00000003 Tadududu Low battery? 00000001 DE 00000004 Empty 00000001 DE 00000005 Empty 00000001 DE 00000006 Clingclong Download complete 00000001 DE 00000007 Offlinemode on Der Offlinemodus ist jetzt aktiviert 00000001 DE 00000008 Offlinemode off Der Offlinemodus wurde beendet 00000001 DE 00000009 Low battery Ohhoh, mein Akku ist leer und ich muss abschalten.</description></item><item><title>Known problems</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/general/known-problems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/general/known-problems/</guid><description>Toniebox related # Box has a wifi password # Checks # Does &amp;ldquo;www.wipy.io&amp;rdquo; or &amp;ldquo;TeamRevvoX&amp;rdquo; work? You may remove the password by connecting to the Box&amp;rsquo; WiFi, go to http://192.168.1.1/main.html &amp;ldquo;Device Config&amp;rdquo; - &amp;ldquo;Access Point config&amp;rdquo;, set the security type to &amp;ldquo;Open&amp;rdquo; and hit apply. Now the password should be removed.
Box only works on the charger # Checks # Battery plugged in? Battery defect? Hitting the box for skipping tracks doesn&amp;rsquo;t work # Checks # Disabled in the cloud?</description></item><item><title>microSD compatibility</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/cc3200/microsd-compatibility/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/cc3200/microsd-compatibility/</guid><description>Here you find a list of working microSD cards for the box. It seems to be very particular. Be sure you format your microSD with fat32.
Working # SanDisk # 128GB SanDisk Ultra microSDXC I 1 A1 64GB SanDisk Ultra microSDXC I 1 16GB SanDisk Ultra microSDXC I 1 8GB SanDisk EDGE microSDHC I 4 2GB SanDisk microSD 32GB Micron microSDHC I 1 32GB Perciron microSD (noname Aliexpress) Not Working # Samsung # 512GB SanDisk Ultra microSDXC I 1 Class 10 U1 A1 32GB Samsung EVO Plus microSDHC I 1 Intenso microSDHC 8GB Class 10 SD card extension # For convenience a SD extension cable can be used to place the card in a better accessible way.</description></item><item><title>Pinout</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/cc3200/pinout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/cc3200/pinout/</guid><description>Pin ID Pin Name Toniebox usage Target Notes 01 GPIO10 SD_CLK SD 02 GPIO11 SD_CMD SD 03 GPIO12 I2C_SCL MMA + DAC 04 GPIO13 I2C_SDA MMA + DAC 05 GPIO14 GSPI_CLK RFID 06 GPIO15 GSPI_MISO RFID 07 GPIO16 GSPI_MOSI RFID 08 GPIO17 Charger Battery 2.4V when on charger 09 VDD_DIG1 10 VINIO1 11 FLASH_SPI_CLK 12 FLASH_SPI_DOUT 13 FLASH_SPI_DIN 14 FLASH_SPI_CS 15 GPIO22 MMA INT1 MMA 16 TDI (GPIO23) CS RFID 17 TDO (GPIO24) Blue LED LED 18 GPIO28 RFID IRQ RFID 19 TCK Red LED LED PWM?</description></item><item><title>Pinout</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/esp32/pinout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/esp32/pinout/</guid><description>Pin ID Pin Name Toniebox usage Target Notes 01 LNA_IN 02 VDD3P3 03 VDD3P3 04 CHIP_PU 05 GPIO0 Boot J100 06 GPIO1 SS TRF7962A 07 GPIO2 MOSI TRF7962A 08 GPIO3 MISO TRF7962A 09 GPIO4 SCLK TRF7962A 10 GPIO5 I2C_SDA LIS + DAC 11 GPIO6 I2C_SCL LIS + DAC 12 GPIO7 button pressed or charger present wake up (1=no button/no charger) 13 GPIO8 ADC_charg R75/R72, 100kΩ/100kΩ divider (div 2) U300 LM3485, 5V buck, charger 14 GPIO9 ADC_Vbatt R57/R58, 100kΩ/33kΩ divider (div 4) right before U320 &amp;ldquo;BW93&amp;rdquo; boost?</description></item><item><title>Protocol analysis</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/general/protocol-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/general/protocol-analysis/</guid><description>prod.de.tbs.toys # Basics # The communication is based on HTTPS (TLS over HTTP). The box authenticates with a client certificate (private.der/client.der) to the server. The cc3200 based boxed may use an outdated sha1 based algorithm that may lead to problems with modern OpenSSL versions.
Request # Every request contains a user-agent header with information about the current running firmware and the box&amp;rsquo; hardware. There may be additional headers such as a content-length or authoritation if needed.</description></item><item><title>Traffic sniffing</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/general/traffic-sniffing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/general/traffic-sniffing/</guid><description>Summary # The toniebox communicates over https with its servers. It uses its Certificate Authority certifcate (flash:/cert/ca.der) to verify the tls connection. The box authenticates itself with a client certificate (flash:/cert/client.der) + private rsa key (flash:/cert/private.der). The communication is based on https and protobuf.
Known domains # prod.de.tbs.toys rtnl.bxcl.de Attention! # Your certificate may be banned if you send to many wrong requests to the Boxine servers.
Using mitmproxy # The Toniebox can be man-in-the-middled by replacing the CA of the box with one you can control.</description></item><item><title>Useful links</title><link>https://toniebox-reverse-engineering.github.io/docs/wiki/general/useful-links/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toniebox-reverse-engineering.github.io/docs/wiki/general/useful-links/</guid><description>https://github.com/micropython/micropython-infineon/blob/master/cc3200/Makefile
https://media.ccc.de/v/36c3-108-hacking-an-nfc-toy-with-the-chameleonmini
https://github.com/g3gg0/proxmark3/commit/24ee0f8de3d2ac75cce6707d9a4c86d550cffaff</description></item></channel></rss>